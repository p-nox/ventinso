spring.application.name=user-service
server.port=8089

# Enable multipart file upload
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
server.tomcat.max-part-count=1

# Directory for user avatar uploads
app.upload.dir=${UPLOAD_DIR:uploads/users/avatars}

# OpenAPI / Swagger UI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/api/swagger

# Eureka Service Discovery
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# MYSQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/users
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.security.user.roles=ADMIN
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

# Flyway
spring.flyway.url=jdbc:mysql://localhost:3306/users
spring.flyway.user=${MYSQL_USER}
spring.flyway.password=${MYSQL_PASSWORD}
spring.flyway.driver-class-name=com.mysql.cj.jdbc.Driver
spring.flyway.locations=classpath:db/migration

# Kafka Broker
spring.kafka.bootstrap-servers=localhost:9094

# Kafka Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer
spring.kafka.consumer.group-id=user-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.auth_service.event,com.example.inventory_service.event,com.example.inventory_preview_service.event,com.example.order_service.event,com.example.payment_service.event
